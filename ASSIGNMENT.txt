

import numpy as np

# Q1. Rotate array k steps to the right
arr = np.array([1, 2, 3, 4, 5])
k = 2
rotated = np.roll(arr, k)
print("Q1:", rotated)   # [4 5 1 2 3]


# Q2. Replace negative numbers with 0
arr = np.array([-3, 5, -1, 7, -9])
replaced = np.where(arr < 0, 0, arr)
print("Q2:", replaced)  # [0 5 0 7 0]


# Q3. Find the second largest element
arr = np.array([10, 20, 4, 45, 99])
second_largest = np.unique(arr)[-2]
print("Q3:", second_largest)  # 45


# Q4. Indices where number occurs
arr = np.array([1, 2, 3, 2, 4, 2])
x = 2
indices = np.where(arr == x)[0]
print("Q4:", indices)  # [1 3 5]


# Q5. Indices of maximum element in multi-dimensional array
arr = np.array([[10, 20], [50, 40]])
max_index = np.unravel_index(np.argmax(arr), arr.shape)
print("Q5:", max_index)  # (1, 0)


# Q6. Sum of each row and each column
arr = np.array([[1, 2, 3],
                [4, 5, 6],
                [7, 8, 9]])
row_sum = np.sum(arr, axis=1)
col_sum = np.sum(arr, axis=0)
print("Q6 Row-wise:", row_sum)   # [ 6 15 24]
print("Q6 Col-wise:", col_sum)   # [12 15 18]


# Q7. Unique elements and frequency
arr = np.array([1, 2, 2, 3, 4, 4, 4])
unique, counts = np.unique(arr, return_counts=True)
print("Q7 Unique:", unique)  # [1 2 3 4]
print("Q7 Count:", counts)   # [1 2 1 3]


# Q8. Absolute diagonal difference
arr = np.array([[11, 2, 4],
                [4, 5, 6],
                [10, 8, -12]])
primary = np.trace(arr)
secondary = np.trace(np.fliplr(arr))
abs_diff = abs(primary - secondary)
print("Q8:", abs_diff)  # 15


# Q9. Extract elements greater than x
arr = np.array([1, 5, 8, 3, 9])
x = 5
greater = arr[arr > x]
print("Q9:", greater)  # [8 9]


# Q10. Normalize between 0 and 1
arr = np.array([10, 20, 30, 40, 50])
normalized = (arr - arr.min()) / (arr.max() - arr.min())
print("Q10:", normalized)  # [0.   0.25 0.5  0.75 1. ]